#!/usr/bin/env perl
#
# den2xplor.  Convert CASTEP formatted charge density file to
# XPLOR/CNS ASCII format for visualization by tools such as VMD, Pymol etc.
#
# Usage:  den2xplor density-file > file.xplor
#

#    Copyright (c) Keith Refson 1998-2012
#
#    This program is free software: you can redistribute it and/or modify
#    it under the terms of the GNU General Public License as published by
#    the Free Software Foundation, either version 3 of the License, or
#    (at your option) any later version.
#
#    This program is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU General Public License for more details.
#
#    You should have received a copy of the GNU General Public License
#    along with this program.  If not, see <http://www.gnu.org/licenses/>.

use Cwd 'abs_path';
BEGIN {$mypath = $0;
       $mypath = abs_path($mypath);
       if ($mypath =~ /^[A-Za-z]:/) {$mypath =~ s@[^\\]+$@@; } else {$mypath =~ s@[^/]+$@@;}
     }
use lib "$mypath";
use ceteprouts;

use POSIX qw(strftime);
#
# Write XPLOR format electron density map file
#
sub Write_Xplor {
  ($nx,$ny,$nz,$a,$b,$c,$alpha,$beta,$gamma,$title,$den) = @_;
  local ($i, $j, $k, $nc);

  $now_string = strftime "%a %b %e %H:%M:%S %Y", gmtime;

  print "\n     2\n";
  print $title,"\n";
  print "Date: $now_string\n\n\n";

  printf "%8d%8d%8d%8d%8d%8d%8d%8d%8d\n",$nx,1,$nx,$ny,1,$ny,$nz,1,$nz;
  printf "%12.5f%12.5f%12.5f%12.5f%12.5f%12.5f\n",$a,$b,$c,$alpha,$beta,$gamma;

  print "ZYX\n";

  for ($k = 0; $k < $nz; $k++) {
    $nc = 0;
    printf "%8d\n",$k;
    for ($i = 0; $i < $nx; $i++) {
      for ($j = 0; $j < $ny; $j++) {
	printf "%12.5f",$$den[$i][$j][$k];
	$nc++;
	if( $nc == 6 ) {
	  $nc = 0;
	  print "\n";
	}
      }
    }
    print "\n" if $nc > 0;
  }
  printf "%8d\n%12.4f %12.4f\n",-9999,0.0,0.0;
}

$density_file = $ARGV[0];
$density_file  =~ /(.*)\.denq.*/;
$seedname = $1;

#
# We need to determine the unit cell.  Look for castep or mol graphics files
# with the same root name.  
# Set $ARGV[0] to read from that file instead of density.
#
if( -f "$seedname.castep" ) {
  $ARGV[0] = "$seedname.castep";
  ReadNewtep (\@av, \@bv, \@cv, \@atomx, \@atomy, \@atomz,
	      \@atyi, \@freq, \@eigvecs, \@kptx, \@kpty, \@kptz, \@wt, \$title);
} elsif ( -f "$seedname.cell" ) {
  $ARGV[0] = "$seedname.cell";
  ReadNewtepCell (\@av, \@bv, \@cv, \@atomx, \@atomy, \@atomz,
		  \@atyi, \@kptx, \@kpty, \@kptz, \@wt);
} elsif ( -f "$seedname.xtl" ) {
  $ARGV[0] = "$seedname.xtl";
  ReadXTL (\@av, \@bv, \@cv, \@atomx, \@atomy, \@atomz, \@atyi, \$spgr, \$title);
} elsif ( -f "$seedname.pdb" ) {
  $ARGV[0] = "$seedname.pdb";
  ReadPDB (\@av, \@bv, \@cv, \@atomx, \@atomy, \@atomz, \@atyi, \$title);
} else {
  @av = (1.0, 0.0, 0.0);
  @bv = (0.0, 1.0, 0.0);
  @cv = (0.0, 0.0, 1.0);
  $title = "DEN2XPLOR: conversion from $density_file";
}
#
# Reset $ARGV[0] so <> will read from the density file.
#
$ARGV[0] = $density_file;

#printf STDERR "%12.6f %12.6f %12.6f\n", $av[0],$av[1],$av[2];
#printf STDERR "%12.6f %12.6f %12.6f\n", $bv[0],$bv[1],$bv[2];
#printf STDERR "%12.6f %12.6f %12.6f\n", $cv[0],$cv[1],$cv[2];

($a,$b,$c,$alpha,$beta,$gamma) = MATtoABC( \@av, \@bv, \@cv );
#
# Read the formatted density and keep track of largest grid dimension.
#
ReadNewtepDen (\@den, \$nx, \$ny, \$nz);

Write_Xplor($nx,$ny,$nz,$a,$b,$c,$alpha,$beta,$gamma,$title,\@den);
